{"version":3,"sources":["App.js","index.js"],"names":["App","exact","path","component","Films","Film","Starship","useState","films","setFilms","useEffect","fetch","then","response","json","res","results","map","film","i","key","to","pathname","state","title","id","useRouteMatch","url","split","setFilm","opening_crawl","starships","link","ship","setShip","related_films","name","renderShip","ReactDOM","render","document","getElementById"],"mappings":"+NAMe,SAASA,IACtB,OACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWE,IACnC,kBAAC,IAAD,CAAOH,KAAK,gBAAgBC,UAAWG,KAK/C,SAASF,IAAS,MAAD,EACWG,mBAAS,IADpB,mBACRC,EADQ,KACDC,EADC,KAQf,OANAC,oBAAU,KACRC,MAAM,gCACHC,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,GAAON,EAASM,EAAIC,WAC3B,IAGD,6BACE,4BACGR,EAAMS,IAAI,CAACC,EAAMC,IAChB,wBAAIC,IAAKD,GACP,kBAAC,IAAD,CAAME,GAAI,CAAEC,SAAS,SAAD,OAAWH,GAAKI,MAAOL,IAASA,EAAKM,WAQrE,SAASnB,IAAQ,IAEXoB,EADUC,cAARC,IACOC,MAAM,KAAK,GAFV,QAGUrB,mBAAS,MAHnB,mBAGPW,EAHO,KAGDW,EAHC,KASd,OALAnB,oBAAU,KACRC,MAAM,+BAAD,OAAgCc,EAAhC,MACFb,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,GAAOc,EAAQd,KACtB,IAED,oCACGG,EACC,6BACF,4BAAKA,EAAKM,OACV,6BAAMN,EAAKY,eACX,6BACE,2BACE,yCAEF,4BACGZ,EAAKa,UAAUd,IAAI,CAACe,EAAMb,IAAM,wBAAIC,IAAKD,GAAG,kBAAC,IAAD,CAAME,GAAE,oBAAeW,EAAKJ,MAAM,KAAK,KAAvC,aAAwDI,EAAKJ,MAAM,KAAK,SAI/G,IAoBhB,SAAStB,IAAY,IAEfmB,EADUC,cAARC,IACOC,MAAM,KAAK,GAFN,QAIMrB,mBAAS,MAJf,mBAIX0B,EAJW,KAILC,EAJK,KAWlB,OANAxB,oBAAU,KACRC,MAAM,mCAAD,OAAoCc,EAApC,MACFb,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,GAAOmB,EAAQnB,KACtB,IAGD,oCACGkB,EA5BaA,KAClB,MAAME,EAAgBF,EAAOA,EAAKzB,MAAQ,GAC1C,OACE,oCACE,4BAAKyB,EAAKG,MACV,sCAEE,4BACGD,EAAclB,IAAI,CAACe,EAAMb,IAAM,wBAAIC,IAAKD,GAAG,kBAAC,IAAD,CAAME,GAAE,gBAAWW,EAAKJ,MAAM,KAAK,KAAnC,iBAAoDI,EAAKJ,MAAM,KAAK,WAoB5GS,CAAWJ,GAAO,ICtFhCK,IAASC,OACP,kBAAC,IAAD,KACE,kBAACvC,EAAD,OAEFwC,SAASC,eAAe,W","file":"static/js/main.78c8f492.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport {Switch, Route, Link, useRouteMatch} from \"react-router-dom\";\n\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n      <Switch>\n        <Route exact path=\"/\" component={Films} />\n        <Route path=\"/film/:id\" component={Film} />\n        <Route path=\"/starship/:id\" component={Starship}/>\n      </Switch>\n  );\n}\n\nfunction Films() {\n  const [films, setFilms] = useState([]);\n  useEffect(() => {\n    fetch(\"https://swapi.dev/api/films/\")\n      .then(response => response.json())\n      .then(res => setFilms(res.results));\n  }, []);\n\n  return (\n    <div>\n      <ul>\n        {films.map((film, i) => (\n          <li key={i}>\n            <Link to={{ pathname: `/film/${i}`, state: film }}>{film.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction Film() {\n  let { url } = useRouteMatch();\n  let id = url.split('/')[2];\n  const [film, setFilm] = useState(null);\n  useEffect(() => {\n    fetch(`https://swapi.dev/api/films/${id}/`)\n      .then(response => response.json())\n      .then(res => setFilm(res));\n  }, []);\n  return (\n    <>\n      {film ? (\n        <div>\n      <h3>{film.title}</h3>\n      <div>{film.opening_crawl}</div>\n      <div>\n        <p>\n          <b>Starships</b>\n        </p>\n        <ul>\n          {film.starships.map((link, i) => <li key={i}><Link to={`/starship/${link.split('/')[5]}`}>/starship/{link.split('/')[5]}</Link></li>)}\n        </ul>\n        \n      </div>\n      </div>) : ''}\n    </>\n  );\n}\n\nconst renderShip = (ship) => {\n  const related_films = ship ? ship.films : [];\n  return (\n    <>\n      <h2>{ship.name}</h2>\n      <div>\n        Films:\n        <ul>\n          {related_films.map((link, i) => <li key={i}><Link to={`/film/${link.split('/')[5]}`}>{`/films/${link.split('/')[5]}`}</Link></li>)}\n        </ul>\n      </div>\n  </>\n  )\n}\n\nfunction Starship() {\n  let { url } = useRouteMatch();\n  let id = url.split('/')[2];\n\n  const [ship, setShip] = useState(null);\n  useEffect(() => {\n    fetch(`https://swapi.dev/api/starships/${id}/`)\n      .then(response => response.json())\n      .then(res => setShip(res));\n  }, []);\n  \n  return (\n    <>\n      {ship ? renderShip(ship): ''}\n    </>\n  )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from 'react-router-dom';\n\n\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}